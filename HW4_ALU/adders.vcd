$date
	Mon Oct 18 17:51:03 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_adders $end
$scope module UUTF $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # c_in $end
$var reg 1 $ c $end
$var reg 1 % y $end
$upscope $end
$upscope $end
$scope module test_adders $end
$scope module UUT32 $end
$var wire 32 & a [31:0] $end
$var wire 32 ' b [31:0] $end
$var wire 1 # c_in $end
$var wire 32 ( sum [31:0] $end
$var wire 33 ) carries [32:0] $end
$var wire 1 * c_out $end
$scope begin ripple_carry[0] $end
$scope module ADDER $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - c_in $end
$var reg 1 . c $end
$var reg 1 / y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[1] $end
$scope module ADDER $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 c_in $end
$var reg 1 3 c $end
$var reg 1 4 y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[2] $end
$scope module ADDER $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 c_in $end
$var reg 1 8 c $end
$var reg 1 9 y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[3] $end
$scope module ADDER $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < c_in $end
$var reg 1 = c $end
$var reg 1 > y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[4] $end
$scope module ADDER $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A c_in $end
$var reg 1 B c $end
$var reg 1 C y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[5] $end
$scope module ADDER $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F c_in $end
$var reg 1 G c $end
$var reg 1 H y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[6] $end
$scope module ADDER $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K c_in $end
$var reg 1 L c $end
$var reg 1 M y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[7] $end
$scope module ADDER $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P c_in $end
$var reg 1 Q c $end
$var reg 1 R y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[8] $end
$scope module ADDER $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 U c_in $end
$var reg 1 V c $end
$var reg 1 W y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[9] $end
$scope module ADDER $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z c_in $end
$var reg 1 [ c $end
$var reg 1 \ y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[10] $end
$scope module ADDER $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ c_in $end
$var reg 1 ` c $end
$var reg 1 a y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[11] $end
$scope module ADDER $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d c_in $end
$var reg 1 e c $end
$var reg 1 f y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[12] $end
$scope module ADDER $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 i c_in $end
$var reg 1 j c $end
$var reg 1 k y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[13] $end
$scope module ADDER $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 n c_in $end
$var reg 1 o c $end
$var reg 1 p y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[14] $end
$scope module ADDER $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 s c_in $end
$var reg 1 t c $end
$var reg 1 u y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[15] $end
$scope module ADDER $end
$var wire 1 v a $end
$var wire 1 w b $end
$var wire 1 x c_in $end
$var reg 1 y c $end
$var reg 1 z y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[16] $end
$scope module ADDER $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 } c_in $end
$var reg 1 ~ c $end
$var reg 1 !" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[17] $end
$scope module ADDER $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 $" c_in $end
$var reg 1 %" c $end
$var reg 1 &" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[18] $end
$scope module ADDER $end
$var wire 1 '" a $end
$var wire 1 (" b $end
$var wire 1 )" c_in $end
$var reg 1 *" c $end
$var reg 1 +" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[19] $end
$scope module ADDER $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." c_in $end
$var reg 1 /" c $end
$var reg 1 0" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[20] $end
$scope module ADDER $end
$var wire 1 1" a $end
$var wire 1 2" b $end
$var wire 1 3" c_in $end
$var reg 1 4" c $end
$var reg 1 5" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[21] $end
$scope module ADDER $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 8" c_in $end
$var reg 1 9" c $end
$var reg 1 :" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[22] $end
$scope module ADDER $end
$var wire 1 ;" a $end
$var wire 1 <" b $end
$var wire 1 =" c_in $end
$var reg 1 >" c $end
$var reg 1 ?" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[23] $end
$scope module ADDER $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 B" c_in $end
$var reg 1 C" c $end
$var reg 1 D" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[24] $end
$scope module ADDER $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 G" c_in $end
$var reg 1 H" c $end
$var reg 1 I" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[25] $end
$scope module ADDER $end
$var wire 1 J" a $end
$var wire 1 K" b $end
$var wire 1 L" c_in $end
$var reg 1 M" c $end
$var reg 1 N" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[26] $end
$scope module ADDER $end
$var wire 1 O" a $end
$var wire 1 P" b $end
$var wire 1 Q" c_in $end
$var reg 1 R" c $end
$var reg 1 S" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[27] $end
$scope module ADDER $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" c_in $end
$var reg 1 W" c $end
$var reg 1 X" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[28] $end
$scope module ADDER $end
$var wire 1 Y" a $end
$var wire 1 Z" b $end
$var wire 1 [" c_in $end
$var reg 1 \" c $end
$var reg 1 ]" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[29] $end
$scope module ADDER $end
$var wire 1 ^" a $end
$var wire 1 _" b $end
$var wire 1 `" c_in $end
$var reg 1 a" c $end
$var reg 1 b" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[30] $end
$scope module ADDER $end
$var wire 1 c" a $end
$var wire 1 d" b $end
$var wire 1 e" c_in $end
$var reg 1 f" c $end
$var reg 1 g" y $end
$upscope $end
$upscope $end
$scope begin ripple_carry[31] $end
$scope module ADDER $end
$var wire 1 h" a $end
$var wire 1 i" b $end
$var wire 1 j" c_in $end
$var reg 1 k" c $end
$var reg 1 l" y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
b0 (
b0 '
b0 &
0%
0$
0#
0"
0!
$end
#1000
1%
b1 (
1/
1"
1,
b1 '
#2000
1!
1+
0"
0,
b1 &
b0 '
#3000
14
12
1$
0%
b10 )
1.
b10 (
0/
1"
1,
b1 '
#4000
04
02
0.
b1 (
1/
1-
0$
1%
0!
0+
0"
0,
b1 )
1#
b0 &
b0 '
#5000
14
12
1$
0%
b11 )
1.
b10 (
0/
1"
1,
b1 '
#6000
1!
1+
0"
0,
b1 &
b0 '
#7000
1%
b11 (
1/
1"
1,
b1 '
#8000
04
02
1*
0.
b0 (
0/
1k"
0-
0$
0%
0"
0,
1i"
0!
0+
1h"
b100000000000000000000000000000000 )
0#
b10000000000000000000000000000000 '
b10000000000000000000000000000000 &
#9000
b100000000000000000 (
1&"
1$"
0*
1~
b100000000000000000 )
0k"
1|
0i"
1{
0h"
b10000000000000000 '
b10000000000000000 &
#10000
b1100000000000000000 (
1+"
1)"
b1100000000000000000 )
1%"
1#"
1""
b110000000000000000 '
b110000000000000000 &
#11000
14
19
1>
1C
1H
1M
0&"
0+"
12
17
1<
1A
1F
1K
0$"
0)"
1.
b1111111 (
1/
13
18
1=
1B
1G
0~
0%"
1-
1$
1%
1"
1,
11
16
1;
1@
1E
0|
0#"
1!
1+
10
15
1:
1?
1D
0{
0""
b1111111 )
1#
b111111 '
b111111 &
#12000
